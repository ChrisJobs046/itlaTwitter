// <auto-generated />
using System;
using Database.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(Chris_ItlaTwitterContext))]
    partial class Chris_ItlaTwitterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Database.Models.Amigo", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("NUsuario1")
                        .HasColumnName("N_Usuario1")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario", "NUsuario1");

                    b.HasIndex("NUsuario1")
                        .HasName("IX_FK_Amigo_Usuario1");

                    b.ToTable("Amigo");
                });

            modelBuilder.Entity("Database.Models.Comentario", b =>
                {
                    b.Property<int>("IdComentario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdPublicaciones")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NComentario1")
                        .HasColumnName("N_Comentario1")
                        .HasColumnType("varchar(300)")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.HasKey("IdComentario");

                    b.HasIndex("IdPublicaciones")
                        .HasName("IX_FK__Comentario_IdPubblicaciones");

                    b.HasIndex("IdUsuario")
                        .HasName("IX_FK__Comentarios_IdUsuario");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("Database.Models.Publicaciones", b =>
                {
                    b.Property<int>("IdPublicaciones")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Mensaje")
                        .HasColumnType("varchar(1200)")
                        .HasMaxLength(1200)
                        .IsUnicode(false);

                    b.Property<string>("Titulo")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.HasKey("IdPublicaciones");

                    b.HasIndex("IdUsuario")
                        .HasName("IX_FK__Publicaciones_IdUsuario");

                    b.ToTable("Publicaciones");
                });

            modelBuilder.Entity("Database.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Correo")
                        .HasColumnType("varchar(45)")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("NUsuario")
                        .HasColumnName("N_Usuario")
                        .HasColumnType("varchar(35)")
                        .HasMaxLength(35)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Database.Models.Amigo", b =>
                {
                    b.HasOne("Database.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("AmigoIdUsuarioNavigation")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_Amigo_Usuario")
                        .IsRequired();

                    b.HasOne("Database.Models.Usuario", "NUsuario1Navigation")
                        .WithMany("AmigoNUsuario1Navigation")
                        .HasForeignKey("NUsuario1")
                        .HasConstraintName("FK_Amigo_Usuario1")
                        .IsRequired();
                });

            modelBuilder.Entity("Database.Models.Comentario", b =>
                {
                    b.HasOne("Database.Models.Publicaciones", "IdPublicacionesNavigation")
                        .WithMany("Comentario")
                        .HasForeignKey("IdPublicaciones")
                        .HasConstraintName("FK__Comentario__Id");

                    b.HasOne("Database.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Comentario")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Comentario_IdUsuario");
                });

            modelBuilder.Entity("Database.Models.Publicaciones", b =>
                {
                    b.HasOne("Database.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Publicaciones")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Publicaciones_IdUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
